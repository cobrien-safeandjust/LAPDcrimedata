fileA, ".csv.gz")))
a <- scan(con,what="",sep=",")
a <- a[seq(17,length(a),by=10)]
return(a)
}
a <- table(unlist(result))
cl <- makeCluster(2)
registerDoParallel(cl)
url.date <- seq(as.Date("2014-01-01"),as.Date("2014-01-03"),by="day")
result <-
foreach(fileA=url.date) %dopar%
{
con <- gzcon(url(paste0("http://cran-logs.rstudio.com/", lubridate::year(fileA), "/",
fileA, ".csv.gz")))
a <- scan(con,what="",sep=",")
a <- a[seq(17,length(a),by=10)]
return(a)
}
a <- table(unlist(result))
stopCluster(cl)
a
library(doParallel)
library(foreach)
library(lubridate)
cl <- makeCluster(2)
registerDoParallel(cl)
url.date <- seq(as.Date("2014-01-01"),as.Date("2015-12-31"),by="day")
result <-
foreach(fileA=url.date) %dopar%
{
con <- gzcon(url(paste0("http://cran-logs.rstudio.com/", lubridate::year(fileA), "/",
fileA, ".csv.gz")))
a <- scan(con,what="",sep=",")
a <- a[seq(17,length(a),by=10)]
return(a)
}
a <- table(unlist(result))
stopCluster(cl)
a
length(a)
?close
close(con)
close(con)
library(doParallel)
library(foreach)
library(lubridate)
cl <- makeCluster(2)
registerDoParallel(cl)
url.date <- seq(as.Date("2014-01-01"),as.Date("2015-12-31"),by="day")
result <-
foreach(fileA=url.date) %dopar%
{
con <- gzcon(url(paste0("http://cran-logs.rstudio.com/", lubridate::year(fileA), "/",
fileA, ".csv.gz")))
a <- scan(con,what="",sep=",")
close(con)
a <- a[seq(17,length(a),by=10)]
return(a)
}
a <- table(unlist(result))
stopCluster(cl)
library(fastDR)
fastDR
kable(x)
library(xtable)
library(knitr)
x <- matrix(sample(1:10),ncol=2)
colnames(x) <- c("x","y")
kable(x)
?kable
library(lubridate)
install.packages(c("glmnet", "jsonlite", "manipulate", "mime", "Rcpp", "rgdal", "rmarkdown", "rstudioapi"))
library(installr)
?installr
updateR()
setwd("z:/articles/transit and crime/LAPDcrimedata")
# organize spatial data
library(rgdal)
LAPDmap.new <- readOGR("lapd reporting district.shp","lapd reporting district")
LAPDmap.old <- readOGR("lapdrd_05.shp","lapdrd_05")
# put maps on same coordinate system
#   guessed the old projection by finding one neat Los Angeles
#   http://spatialreference.org/ref/epsg/?search=california&srtext=Search
proj4string(LAPDmap.old) <- CRS("+proj=lcc +lat_1=35.46666666666667 +lat_2=34.03333333333333 +lat_0=33.5 +lon_0=-118 +x_0=2000000.0001016 +y_0=500000.0001016001 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 +no_defs")
LAPDmap.old <- spTransform(LAPDmap.old, LAPDmap.new@proj4string)
plot(LAPDmap.new)
plot(LAPDmap.old,col="red",add=TRUE)
# check changes in map
plot(subset(LAPDmap.new,number %in% c(711,713,714,715)))
plot(subset(LAPDmap.old,REPDIST %in% c(691,692,693,694)),col="red",add=TRUE)
plot(LAPDmap.new)
plot(subset(LAPDmap.old,REPDIST %in% c(691,692,693,694)),col="red",add=TRUE)
RDxwalk <- read.csv("lapd2009old2new rd xwalk.csv",as.is=TRUE)
a <- with(RDxwalk, NEW.RD[NEW.RD!=OLD.RD])
a <- a[!is.na(a)]
plot(LAPDmap.new)
plot(subset(LAPDmap.new,number %in% a),col="red",add=TRUE)
station.map <- list()
station.map$blue  <- readOGR("BlueLineSta0412.shp", "BlueLineSta0412")
station.map$gold  <- readOGR("GoldLineSta0412.shp", "GoldLineSta0412")
station.map$green <- readOGR("GreenLineSta0412.shp","GreenLineSta0412")
station.map$rp    <- readOGR("RPLinesSta0412.shp",  "RPLinesSta0412")
station.map$expo  <- readOGR("ExpoLineSta0512.shp", "ExpoLineSta0512")
station.map$blue  <- spTransform(station.map$blue,  LAPDmap.new@proj4string)
station.map$gold  <- spTransform(station.map$gold,  LAPDmap.new@proj4string)
station.map$green <- spTransform(station.map$green, LAPDmap.new@proj4string)
station.map$rp    <- spTransform(station.map$rp,    LAPDmap.new@proj4string)
station.map$expo  <- spTransform(station.map$expo,  LAPDmap.new@proj4string)
par(mai=c(0,0,0,0))
plot(LAPDmap.new,new=FALSE)
points(station.map$blue,  col="blue",       pch=16)
points(station.map$gold,  col="gold",       pch=16)
points(station.map$green, col="green",      pch=16)
points(station.map$rp,    col="red",        pch=16)
points(station.map$expo,  col="light blue", pch=16)
# read in station history
station.hx <- read.csv("LA station history.csv",as.is=TRUE)
station.hx$Date.opened <- mdy(station.hx$Date.opened)
library(lubridate)
station.hx <- read.csv("LA station history.csv",as.is=TRUE)
station.hx$Date.opened <- mdy(station.hx$Date.opened)
station.hx
# merge the two to make a 1988-2010 dataset
setwd("z:/articles/transit and crime/LAPDcrimedata")
##############################################################################
# load data from LAPD incidents
incd.data <- read.csv("LAPD crime counts from incidents.csv")
incd.data[1:3,]
?gzfile
data13 <- gzfile("LAPD_Crime_and_Collision_Raw_Data_for_2013.csv.gz")
is(data13)
data13 <- read.csv(gzfile,as.is=TRUE)
data13.con <- gzfile("LAPD_Crime_and_Collision_Raw_Data_for_2013.csv.gz",open="r")
data13 <- read.csv(gzfile,as.is=TRUE)
data13 <- read.csv("LAPD_Crime_and_Collision_Raw_Data_for_2013.csv.gz",as.is=TRUE)
data13[1:3,]
setwd("z:/articles/transit and crime/LAPDdata")
data <- read.csv("JohnMacLAPDdata/2009.csv",as.is=TRUE)
data[1:3,]
table(data$crimeclasscodes)
a <- strsplit(data$crimeclasscodes," ")
a
sapply(a,function(x) length(x)>1 && x[2]=="110")
sum(sapply(a,function(x) length(x)>1 && x[2]=="110"))
data <- read.csv("JohnMacLAPDdata/2009.csv",as.is=TRUE)
a <- sapply(strsplit(data$crimeclasscodes," "), function(x) x[1])
a
a <- cbind(a,data$crimetype)
a
a <- sapply(strsplit(data$crimeclasscodes," "), function(x) x[1])
a <- unique(cbind(a,data$crimetype))
a
table(a[,1])
table(table(a[,1]))
table(a[,2])
setwd("z:/articles/transit and crime/LAPDdata")
library(lubridate)
library(foreach)
data.tab        <- vector("list",7)
crimetype.xwalk <- vector("list",7)
for(ii in 1:7)
{
year <- 2003+ii
print(year)
data <- read.csv(paste("JohnMacLAPDdata/",year,".csv",sep=""),as.is=TRUE)
names(data) <- tolower(names(data))
if(year %in% c(2009,2010))
{
data$date <- parse_date_time(data$begdate,"d! b y*!")
} else
{
data$date <- mdy(gsub(" 0:00(:[0]+)?","",data$begdate))
}
# fix those with wrong year
i <- which(year(data$date)!=year)
if(length(i)>0) year(data$date[i]) <- year
# record primary crime type
data$crime <- gsub("^([A-Z]+) .*$","\\1",data$crimetypes)
# drop theft of boat, kidnapping, etc.
#    SEX & RAPE missing in 2009/10
#    THEFT not used in 2004-7, use GTA/GTP instead
data <- subset(data, !(crime %in% c("BOAT","BRCV","KID","OTH","RCVD",
"TRES","VAND","MISS","ARSON","",
"SEX","RAPE",
"THEFT")))
# compute quarter
data$quarter <- "Q1"
data$quarter[data$date>paste(year,"-03-31",sep="")] <- "Q2"
data$quarter[data$date>paste(year,"-06-30",sep="")] <- "Q3"
data$quarter[data$date>paste(year,"-09-30",sep="")] <- "Q4"
FEresult <-
foreach(i.quarter=c("Q1","Q2","Q3","Q4")) %do%
{
a <- with(subset(data, quarter==i.quarter), table(rd,crime))
a <- as.data.frame.matrix(a)
a$quarter <- paste(year,i.quarter,sep="")
a$rd <- rownames(a)
return(a)
}
data.tab[[ii]] <- do.call(rbind,FEresult)
# create lookup table of crime class codes to crime types
a <- sapply(strsplit(data$crimeclasscodes," "), function(x) x[1])
crimetype.xwalk[[ii]] <- unique(cbind(a,data$crimetype))
}
data$crimeclasscodes
data[1:3,]
names(data)[names(data)=="crimeclasses"] <- "crimeclasscodes"
a <- sapply(strsplit(data$crimeclasscodes," "), function(x) x[1])
crimetype.xwalk[[ii]] <- unique(cbind(a,data$crimetype))
crimetype.xwalk[[ii]]
a
data[1:3,]
a <- sapply(strsplit(data$crimeclasscodes," "), function(x) x[1])
crimetype.xwalk[[ii]] <- unique(cbind(a,data$crime))
crimetype.xwalk[[ii]]
data[1:3,]
suset(data$crimclass1==7)
subset(data$crimclass1==7)
subset(data,crimclass1==7)
subset(data,crimclass1==34)
subset(data,crimclass1==99)
data.tab        <- vector("list",7)
crimetype.xwalk <- vector("list",7)
for(ii in 1:7)
{
year <- 2003+ii
print(year)
data <- read.csv(paste("JohnMacLAPDdata/",year,".csv",sep=""),as.is=TRUE)
names(data) <- tolower(names(data))
if(year %in% c(2009,2010))
{
data$date <- parse_date_time(data$begdate,"d! b y*!")
} else
{
data$date <- mdy(gsub(" 0:00(:[0]+)?","",data$begdate))
names(data)[names(data)=="crimeclasses"] <- "crimeclasscodes"
}
# fix those with wrong year
i <- which(year(data$date)!=year)
if(length(i)>0) year(data$date[i]) <- year
# record primary crime type
data$crime <- gsub("^([A-Z]+) .*$","\\1",data$crimetypes)
# drop theft of boat, kidnapping, etc.
#    SEX & RAPE missing in 2009/10
#    THEFT not used in 2004-7, use GTA/GTP instead
data <- subset(data, !(crime %in% c("BOAT","BRCV","KID","OTH","RCVD",
"TRES","VAND","MISS","ARSON","",
"SEX","RAPE",
"THEFT")))
# compute quarter
data$quarter <- "Q1"
data$quarter[data$date>paste(year,"-03-31",sep="")] <- "Q2"
data$quarter[data$date>paste(year,"-06-30",sep="")] <- "Q3"
data$quarter[data$date>paste(year,"-09-30",sep="")] <- "Q4"
FEresult <-
foreach(i.quarter=c("Q1","Q2","Q3","Q4")) %do%
{
a <- with(subset(data, quarter==i.quarter), table(rd,crime))
a <- as.data.frame.matrix(a)
a$quarter <- paste(year,i.quarter,sep="")
a$rd <- rownames(a)
return(a)
}
data.tab[[ii]] <- do.call(rbind,FEresult)
# create lookup table of crime class codes to crime types
a <- sapply(strsplit(data$crimeclasscodes," "), function(x) x[1])
crimetype.xwalk[[ii]] <- unique(cbind(a,data$crime))
}
data.tab        <- vector("list",7)
crimetype.xwalk <- vector("list",7)
for(ii in 1:7)
{
year <- 2003+ii
print(year)
data <- read.csv(paste0("JohnMacLAPDdata/",year,".csv.gz"),as.is=TRUE)
names(data) <- tolower(names(data))
if(year %in% c(2009,2010))
{
data$date <- parse_date_time(data$begdate,"d! b y*!")
} else
{
data$date <- mdy(gsub(" 0:00(:[0]+)?","",data$begdate))
names(data)[names(data)=="crimeclasses"] <- "crimeclasscodes"
}
# fix those with wrong year
i <- which(year(data$date)!=year)
if(length(i)>0) year(data$date[i]) <- year
# record primary crime type
data$crime <- gsub("^([A-Z]+) .*$","\\1",data$crimetypes)
# drop theft of boat, kidnapping, etc.
#    SEX & RAPE missing in 2009/10
#    THEFT not used in 2004-7, use GTA/GTP instead
data <- subset(data, !(crime %in% c("BOAT","BRCV","KID","OTH","RCVD",
"TRES","VAND","MISS","ARSON","",
"SEX","RAPE",
"THEFT")))
# compute quarter
data$quarter <- "Q1"
data$quarter[data$date>paste(year,"-03-31",sep="")] <- "Q2"
data$quarter[data$date>paste(year,"-06-30",sep="")] <- "Q3"
data$quarter[data$date>paste(year,"-09-30",sep="")] <- "Q4"
FEresult <-
foreach(i.quarter=c("Q1","Q2","Q3","Q4")) %do%
{
a <- with(subset(data, quarter==i.quarter), table(rd,crime))
a <- as.data.frame.matrix(a)
a$quarter <- paste(year,i.quarter,sep="")
a$rd <- rownames(a)
return(a)
}
data.tab[[ii]] <- do.call(rbind,FEresult)
# create lookup table of crime class codes to crime types
a <- sapply(strsplit(data$crimeclasscodes," "), function(x) x[1])
crimetype.xwalk[[ii]] <- unique(cbind(a,data$crime))
}
data.tab        <- vector("list",7)
crimetype.xwalk <- vector("list",7)
for(ii in 1:7)
{
year <- 2003+ii
print(year)
data <- read.csv(paste0("JohnMacLAPDdata/",year,".csv.gz"),as.is=TRUE)
names(data) <- tolower(names(data))
if(year %in% c(2009,2010))
{
data$date <- parse_date_time(data$begdate,"d! b y*!")
} else
{
data$date <- mdy(gsub(" 0:00(:[0]+)?","",data$begdate))
names(data)[names(data)=="crimeclasses"] <- "crimeclasscodes"
}
# fix those with wrong year
i <- which(year(data$date)!=year)
if(length(i)>0) year(data$date[i]) <- year
# record primary crime type
data$crime <- gsub("^([A-Z]+) .*$","\\1",data$crimetypes)
# drop theft of boat, kidnapping, etc.
#    SEX & RAPE missing in 2009/10
#    THEFT not used in 2004-7, use GTA/GTP instead
data <- subset(data, !(crime %in% c("BOAT","BRCV","KID","OTH","RCVD",
"TRES","VAND","MISS","ARSON","",
"SEX","RAPE",
"THEFT")))
# compute quarter
data$quarter <- "Q1"
data$quarter[data$date>paste(year,"-03-31",sep="")] <- "Q2"
data$quarter[data$date>paste(year,"-06-30",sep="")] <- "Q3"
data$quarter[data$date>paste(year,"-09-30",sep="")] <- "Q4"
FEresult <-
foreach(i.quarter=c("Q1","Q2","Q3","Q4")) %do%
{
a <- with(subset(data, quarter==i.quarter), table(rd,crime))
a <- as.data.frame.matrix(a)
a$quarter <- paste(year,i.quarter,sep="")
a$rd <- rownames(a)
return(a)
}
data.tab[[ii]] <- do.call(rbind,FEresult)
# create lookup table of crime class codes to crime types
a <- sapply(strsplit(data$crimeclasscodes," "), function(x) x[1])
crimetype.xwalk[[ii]] <- unique(cbind(a,data$crime))
}
crimetype.xwalk0 <- do.call(rbind, crimetype.xwalk)
crimetype.xwalk0
crimetype.xwalk
\
crimetype.xwalk0 <- unique(do.call(rbind, crimetype.xwalk))
crimetype.xwalk0
table(table(a[,1]))
table(table(crimetype.xwalk0[,1]))
table(crimetype.xwalk0[,1])
data.frame(crimetype.xwalk0)
?data.frame
crimetype.xwalk0 <- unique(do.call(rbind, crimetype.xwalk))
data.frame(crimeclasscode=crimetype.xwalk0[,1],
crimetype     =crimetype.xwalk0[,2],
stringsAsFactors=FALSE)
crimetype.xwalk0 <- unique(do.call(rbind, crimetype.xwalk))
crimetype.xwalk0 <- data.frame(crimeclasscode=crimetype.xwalk0[,1],
crimetype     =crimetype.xwalk0[,2],
stringsAsFactors=FALSE)
crimetype.xwalk0 <- subset(crimetype.xwalk0, as.numeric(crimeclasscode)>=100)
crimetype.xwalk0
data[1:3,]
a <- unlist(strsplit(data$crimeclasscodes," "))
a
a[1:10]
data[1:3,]
b <- unlist(strsplit(data$crimetypes," "))
setwd("z:/articles/transit and crime/LAPDdata")
library(lubridate)
library(foreach)
data.tab        <- vector("list",7)
crimetype.xwalk <- vector("list",7)
for(ii in 1:7)
{
year <- 2003+ii
print(year)
data <- read.csv(paste0("JohnMacLAPDdata/",year,".csv.gz"),as.is=TRUE)
names(data) <- tolower(names(data))
if(year %in% c(2009,2010))
{
data$date <- parse_date_time(data$begdate,"d! b y*!")
} else
{
data$date <- mdy(gsub(" 0:00(:[0]+)?","",data$begdate))
names(data)[names(data)=="crimeclasses"] <- "crimeclasscodes"
}
# fix those with wrong year
i <- which(year(data$date)!=year)
if(length(i)>0) year(data$date[i]) <- year
# record primary crime type
data$crime <- gsub("^([A-Z]+) .*$","\\1",data$crimetypes)
# drop theft of boat, kidnapping, etc.
#    SEX & RAPE missing in 2009/10
#    THEFT not used in 2004-7, use GTA/GTP instead
data <- subset(data, !(crime %in% c("BOAT","BRCV","KID","OTH","RCVD",
"TRES","VAND","MISS","ARSON","",
"SEX","RAPE",
"THEFT")))
# compute quarter
data$quarter <- "Q1"
data$quarter[data$date>paste(year,"-03-31",sep="")] <- "Q2"
data$quarter[data$date>paste(year,"-06-30",sep="")] <- "Q3"
data$quarter[data$date>paste(year,"-09-30",sep="")] <- "Q4"
FEresult <-
foreach(i.quarter=c("Q1","Q2","Q3","Q4")) %do%
{
a <- with(subset(data, quarter==i.quarter), table(rd,crime))
a <- as.data.frame.matrix(a)
a$quarter <- paste(year,i.quarter,sep="")
a$rd <- rownames(a)
return(a)
}
data.tab[[ii]] <- do.call(rbind,FEresult)
# create lookup table of crime class codes to crime types
a <- unlist(strsplit(data$crimeclasscodes," "))
b <- unlist(strsplit(data$crimetypes," "))
crimetype.xwalk[[ii]] <- unique(cbind(a,b))
}
a[1:10,]
a[1:10]
b[1:10]
length(a)
length(b)
which(sapply(strsplit(data$crimeclasscodes," "),length)!=sapply(strsplit(data$crimetypes," "),length))
data[373,]
setwd("z:/articles/transit and crime/LAPDdata")
library(lubridate)
library(foreach)
data.tab        <- vector("list",7)
crimetype.xwalk <- vector("list",7)
for(ii in 1:7)
{
year <- 2003+ii
print(year)
data <- read.csv(paste0("JohnMacLAPDdata/",year,".csv.gz"),as.is=TRUE)
names(data) <- tolower(names(data))
if(year %in% c(2009,2010))
{
data$date <- parse_date_time(data$begdate,"d! b y*!")
} else
{
data$date <- mdy(gsub(" 0:00(:[0]+)?","",data$begdate))
names(data)[names(data)=="crimeclasses"] <- "crimeclasscodes"
}
# fix those with wrong year
i <- which(year(data$date)!=year)
if(length(i)>0) year(data$date[i]) <- year
# record primary crime type
data$crime <- gsub("^([A-Z]+) .*$","\\1",data$crimetypes)
# drop theft of boat, kidnapping, etc.
#    SEX & RAPE missing in 2009/10
#    THEFT not used in 2004-7, use GTA/GTP instead
data <- subset(data, !(crime %in% c("BOAT","BRCV","KID","OTH","RCVD",
"TRES","VAND","MISS","ARSON","",
"SEX","RAPE",
"THEFT")))
# compute quarter
data$quarter <- "Q1"
data$quarter[data$date>paste(year,"-03-31",sep="")] <- "Q2"
data$quarter[data$date>paste(year,"-06-30",sep="")] <- "Q3"
data$quarter[data$date>paste(year,"-09-30",sep="")] <- "Q4"
FEresult <-
foreach(i.quarter=c("Q1","Q2","Q3","Q4")) %do%
{
a <- with(subset(data, quarter==i.quarter), table(rd,crime))
a <- as.data.frame.matrix(a)
a$quarter <- paste(year,i.quarter,sep="")
a$rd <- rownames(a)
return(a)
}
data.tab[[ii]] <- do.call(rbind,FEresult)
# create lookup table of crime class codes to crime types
a <- sapply(strsplit(data$crimeclasscodes," "), function(x) x[1])
crimetype.xwalk[[ii]] <- unique(cbind(a,data$crime))
}
crimetype.xwalk0 <- unique(do.call(rbind, crimetype.xwalk))
crimetype.xwalk0 <- data.frame(crimeclasscode=crimetype.xwalk0[,1],
crimetype     =crimetype.xwalk0[,2],
stringsAsFactors=FALSE)
crimetype.xwalk0 <- subset(crimetype.xwalk0, as.numeric(crimeclasscode)>=100)
crimetype.xwalk0
crimetype.xwalk0 <- crimetype.xwalk0[order(crimetype.xwalk0$crimeclasscode),]
crimetype.xwalk0
write.csv(data,file="CrimeClassCode-CrimeTypeXWalk.csv",
row.names=FALSE,quote=FALSE)
write.csv(crimetype.xwalk0,file="CrimeClassCode-CrimeTypeXWalk.csv",
row.names=FALSE,quote=FALSE)
setwd("z:/articles/transit and crime/LAPDcrimedata")
crimetype.xwalk <- read.csv("CrimeClassCode-CrimeTypeXWalk.csv",as.is=TRUE)
data13[1:3,]
